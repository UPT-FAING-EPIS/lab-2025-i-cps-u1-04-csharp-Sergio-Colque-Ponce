name: Activdad 2 - Analisis de Vulnerabilidades con TFSec

on:
  push
    #branches: [ "main" ]
    
    #paths:
    #  - 'infra/**'
  #workflow_dispatch:
jobs:
  tfsec-analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Setup tfsec
        run: |
          curl -L -o /tmp/tfsec_1.28.13_linux_amd64.tar.gz "https://github.com/aquasecurity/tfsec/releases/download/v1.28.13/tfsec_1.28.13_linux_amd64.tar.gz"
          tar -xzvf /tmp/tfsec_1.28.13_linux_amd64.tar.gz -C /tmp
          mv -v /tmp/tfsec /usr/local/bin/tfsec
          chmod +x /usr/local/bin/tfsec
      - name: Run TFSec
        run: |
          cd infra
          tfsec --soft-fail --format json --out tfsec-results.json
      - name: Analyze TFSec Results
        run: |
          if [[ -f infra/tfsec-results.json ]]; then
            echo "## TFSec Vulnerabilities Detected" >> $GITHUB_STEP_SUMMARY
            cat infra/tfsec-results.json >> $GITHUB_STEP_SUMMARY
          else
            echo "No vulnerabilities detected by TFSec." >> $GITHUB_STEP_SUMMARY
          fi
      - name: Login to Azure
        run: |
          az login -u ${{ secrets.AZURE_USERNAME }} -p ${{ secrets.AZURE_PASSWORD }}
      # - name: Resolve TFSec Vulnerabilities (if applicable)
      #   run: |
      #     cd infra
      #     terraform init
      #     terraform plan \
      #       -out=tfplan \
      #       -var="sqladmin_username=${{ secrets.SQL_USER }}" \
      #       -var="sqladmin_password=${{ secrets.SQL_PASS }}" \
      #       -var="suscription_id=${{ secrets.SUSCRIPTION_ID }}" 

      #     terraform show -json tfplan > plan.json
      #     terraform resolve --plan plan.json --tfsec tfsec-results.json --output resolved

      #     mv resolved/* .
      #     terraform fmt
      - name: Resolve TFSec Vulnerabilities (manual)
        run: |
          echo "Por favor, revise manualmente el archivo infra/tfsec-results.json y corrija las vulnerabilidades en los archivos Terraform (.tf)."
  
      - name: Commit Resolved Files
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Resolve TFSec vulnerabilities"
          git push